{"version":3,"sources":["counterSlice.js","store.js","reportWebVitals.js","Scorenumbers/TopScorenumbers.js","Scorenumbers/LeftScoreNumbers.js","Playerboard/playerboard.js","Resources/socket.js","App.js","index.js"],"names":["counterSlice","createSlice","name","initialState","Top","Left","TopPic","LeftPic","TopScore","LeftScore","TopNumberOrder","LeftNumberOrder","PeopleOnBoard","TopScoreIndex","LeftScoreIndex","PlayerIndex","Trigger","reducers","setUpdate","state","action","payload","setGameData","slice","indexOf","counter","actions","configureStore","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TopNumbers","useState","topNumber","setTopNumbers","Xcord","useDispatch","useSelector","topNumbers","trigger","rightPicture","topScore","useEffect","setArray","Fragment","Grid","container","columns","item","xs","src","map","element","Card","style","backgroundColor","Leftnumbers","leftNumber","setLeftNumbers","Ycord","leftNumbers","leftScore","leftPicture","Setplayers","namesArray","setNamesArray","peopleOnBoard","playerIndex","minWidth","minHeight","onClick","console","log","socket","io","connect","all","props","on","dispatch","reRen","setReRen","getGameInfo","off","e","axios","get","a","res","data","className","Button","ReactDOM","render","store","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.6c6c18cf.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: {\r\n        Top: \"\",\r\n        Left: \"\",\r\n        TopPic: \"\",\r\n        LeftPic: \"\",\r\n        TopScore: 0,\r\n        LeftScore: 0,\r\n        TopNumberOrder: [],\r\n        LeftNumberOrder: [],\r\n        PeopleOnBoard: [],\r\n        TopScoreIndex: 0,\r\n        LeftScoreIndex: 0,\r\n        PlayerIndex: 0,\r\n        Trigger: true\r\n    },\r\n    reducers: {\r\n        setUpdate: (state, action) =>{\r\n            state.Trigger = action.payload;\r\n        },\r\n        setGameData: (state, action) => {\r\n            state.TopScore = action.payload.TopScore;\r\n            state.LeftScore = action.payload.LeftScore;\r\n            state.Top = action.payload.Top;\r\n            state.Left = action.payload.Left;\r\n            state.TopPic = action.payload.TopPic;\r\n            state.LeftPic = action.payload.LeftPic;\r\n            state.TopScore = action.payload.TopScore;\r\n            state.LeftScore = action.payload.LeftScore;\r\n            state.TopNumberOrder = action.payload.TopNumberOrder.slice();\r\n            state.LeftNumberOrder = action.payload.LeftNumberOrder.slice();\r\n            state.PeopleOnBoard = action.payload.PeopleOnBoard.slice();\r\n            state.TopScoreIndex = state.TopNumberOrder.indexOf(state.TopScore % 10);\r\n            state.LeftScoreIndex = state.LeftNumberOrder.indexOf(state.LeftScore % 10);\r\n            state.PlayerIndex = ((state.LeftScoreIndex * 10) + state.TopScoreIndex);\r\n\r\n        }\r\n\r\n    },\r\n})\r\n\r\nexport const TopName = state => state.counter.Top\r\nexport const LeftName = state => state.counter.Left\r\nexport const TopPic = state => state.counter.TopPic\r\nexport const LeftPic = state => state.counter.LeftPic\r\nexport const TopScore = state => state.counter.TopScore\r\nexport const LeftScore = state => state.counter.LeftScore\r\nexport const TopNumberOrder = state => state.counter.TopNumberOrder\r\nexport const LeftNumberOrder = state => state.counter.LeftNumberOrder\r\nexport const PeopleOnBoard = state => state.counter.PeopleOnBoard\r\nexport const TopScoreIndex = state => state.counter.TopScoreIndex\r\nexport const LeftScoreIndex = state => state.counter.LeftScoreIndex\r\nexport const PlayerIndex = state => state.counter.PlayerIndex\r\nexport const Trigger = state => state.counter.Trigger\r\nexport const { setGameData, setUpdate} = counterSlice.actions\r\nexport default counterSlice.reducer","import {configureStore} from '@reduxjs/toolkit'\r\nimport counterSlice from './counterSlice'\r\n\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        counter: counterSlice\r\n    }\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card, ImageListItem } from '@mui/material';\r\nimport { numbers } from '../Resources/information'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TopNumberOrder, TopPic, TopScore, TopScoreIndex, Trigger } from '../counterSlice';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function TopNumbers() {\r\n    const [topNumber, setTopNumbers] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const Xcord = useSelector(TopScoreIndex);\r\n    const topNumbers = useSelector(TopNumberOrder);\r\n    const trigger = useSelector(Trigger)\r\n    const rightPicture = useSelector(TopPic);\r\n    const topScore = useSelector(TopScore);\r\n    useEffect(() => {\r\n        setArray();\r\n    }, [trigger])\r\n    let setArray = () => {\r\n\r\n        setTopNumbers(topNumbers);\r\n\r\n\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Grid container columns={1}>\r\n                <Grid item xs={1}><img src={rightPicture}/> </Grid>\r\n                <Grid item xs={1}>{topScore}</Grid>\r\n                <Grid item xs={1}>\r\n                    <Grid container columns={10}>\r\n                        {topNumber.map((element) => (\r\n                            <Grid item key={element} xs={1} >\r\n                                <Card\r\n                                    style={{ backgroundColor: topNumber[Xcord] === element ? 'Blue' : 'White' }}>\r\n                                    {element}\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card } from '@mui/material';\r\nimport { LeftNumberOrder, LeftPic, LeftScore, LeftScoreIndex, Trigger } from '../counterSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Leftnumbers() {\r\n\r\n    /* eslint-disable */\r\n    const [leftNumber, setLeftNumbers] = useState([]);\r\n    const Ycord = useSelector(LeftScoreIndex);\r\n    const leftNumbers = useSelector(LeftNumberOrder);\r\n    const trigger = useSelector(Trigger)\r\n    const leftScore = useSelector(LeftScore);\r\n    const leftPicture = useSelector(LeftPic);\r\n\r\n    useEffect(() => {\r\n        setArray();\r\n\r\n    }, [trigger])\r\n    let setArray = () => {\r\n        setLeftNumbers(leftNumbers);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container columns={3}>\r\n                <Grid item xs={1}>{leftPicture}</Grid>\r\n                <Grid item xs={1}>{leftScore}</Grid>\r\n                <Grid item xs={1}>\r\n                    <Grid container columns={1}>\r\n                        {leftNumber.map((element) => (\r\n                            <Grid item key={element} xs={1} >\r\n                                <Card\r\n                                    style={{ backgroundColor: leftNumber[Ycord] === element ? 'Blue' : 'White' }} >\r\n                                    {element}\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card } from '@mui/material';\r\nimport { names } from '../Resources/information'\r\nimport { useSelector } from 'react-redux';\r\nimport { PlayerIndex, PeopleOnBoard, Trigger } from '../counterSlice';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function Setplayers() {\r\n    /* eslint-disable */\r\n    const [namesArray, setNamesArray] = useState([]);\r\n    const peopleOnBoard = useSelector(PeopleOnBoard);\r\n    const playerIndex = useSelector(PlayerIndex);\r\n    const trigger = useSelector(Trigger)\r\n    useEffect(() => {\r\n        setArray();\r\n    }, [trigger])\r\n    let setArray =  () => {\r\n\r\n         setNamesArray(peopleOnBoard) \r\n\r\n\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container columns={10}>\r\n                {namesArray.map((element) => (\r\n                    <Grid item key={element} xs={1} style={{ minWidth: \".5%\", minHeight: \".005%\" }}>\r\n                        <Card\r\n                            onClick={() => { console.log(playerIndex) }}\r\n                            style={{ backgroundColor: playerIndex === namesArray.indexOf(element) ? 'Blue' : 'White', minWidth: \".5%\", minHeight: \".00005%\" }}>\r\n                            {element}\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import {io} from 'socket.io-client';\r\n\r\nconst socket = io('https://pure-beach-20004.herokuapp.com/');\r\n\r\nexport default socket;","// eslint-disable\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./App.css\";\nimport react from \"react\";\nimport { Grid, Button } from '@mui/material';\nimport TopScorenumbers from './Scorenumbers/TopScorenumbers'\nimport LeftScorenumber from './Scorenumbers/LeftScoreNumbers'\nimport Playerboard from './Playerboard/playerboard'\nimport { setGameData, setUpdate } from './counterSlice'\nimport { useDispatch, connect } from \"react-redux\";\nimport socket from './Resources/socket'\n\n\nfunction App(props) {\n\n  socket.on('connect',()=>{\n    console.log(\"Connected\")\n  })\n  const dispatch = useDispatch();\n  const [reRen, setReRen] = useState(true);\n\n  useEffect(() => {\n\n    getGameInfo();\n    console.log(\"Use effect triggered\")\n\n  }, [reRen])\n  socket.off().on('Update-Notification', (e)=>{\n    console.log(e)\n    console.log(\"calling api again\");\n    getGameInfo();\n  })\n  var getGameInfo = () =>{\n    axios.get('https://cryptic-wildwood-11303.herokuapp.com/game/0').then(async (res) => {\n      let data = await res.data;\n      dispatch(setGameData(data));\n      dispatch(setUpdate(!props.trigger))\n    })\n  }\n\n  return (\n    <react.Fragment>\n      <Grid container className=\"Yello\">\n        <Grid item xs={2}></Grid>\n        <Grid item xs={10}><TopScorenumbers /> </Grid>\n        <Grid item xs={2}><LeftScorenumber /></Grid>\n        <Grid item xs={10}><Playerboard /></Grid>\n      </Grid>\n\n      <Button onClick={() => {setReRen(!props.trigger) }}>Push me</Button>\n\n    </react.Fragment>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    trigger: state.counter.Trigger,\n    all: state.counter,\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store'\nimport { Provider } from 'react-redux';\nimport {CookiesProvider} from 'react-cookie'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <CookiesProvider>\n    <App />\n    </CookiesProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}