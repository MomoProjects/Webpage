{"version":3,"sources":["counterSlice.js","store.js","reportWebVitals.js","Scorenumbers/TopScorenumbers.js","Scorenumbers/LeftScoreNumbers.js","Playerboard/playerboard.js","GameInfoPage/GameInfoPage.js","GameLogin/GameLogin.js","App.js","index.js"],"names":["counterSlice","createSlice","name","initialState","Top","Left","TopPic","LeftPic","TopScore","LeftScore","TopNumberOrder","LeftNumberOrder","PeopleOnBoard","TopScoreIndex","LeftScoreIndex","PlayerIndex","Trigger","GameCode","LegitCode","reducers","setUpdate","state","action","payload","setGameData","slice","indexOf","setGameCode","resetState","counter","actions","configureStore","reducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TopNumbers","useState","topNumber","setTopNumbers","Xcord","useSelector","topNumbers","trigger","rightPicture","topScore","useEffect","setArray","Fragment","Grid","container","columns","item","xs","style","paddingLeft","width","src","process","map","element","Card","border","backgroundColor","Leftnumbers","leftNumber","setLeftNumbers","Ycord","leftNumbers","leftScore","leftPicture","paddingTop","Setplayers","namesArray","setNamesArray","peopleOnBoard","playerIndex","minWidth","minHeight","onClick","console","log","socket","io","connect","all","props","game","useParams","on","off","data","jsonObj","JSON","parse","GameData","dispatch","useDispatch","reRen","setReRen","getGameInfo","emit","BoardData","marginRight","className","Button","gameCode","TextField","size","required","id","label","onChange","e","target","value","to","variant","App","path","Layout","index","BlogPost","NoMatch","slug","ReactDOM","render","store","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.61d32e53.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: {\r\n        Top: \"\",\r\n        Left: \"\",\r\n        TopPic: \"\",\r\n        LeftPic: \"\",\r\n        TopScore: 0,\r\n        LeftScore: 0,\r\n        TopNumberOrder: [],\r\n        LeftNumberOrder: [],\r\n        PeopleOnBoard: [],\r\n        TopScoreIndex: 0,\r\n        LeftScoreIndex: 0,\r\n        PlayerIndex: 0,\r\n        Trigger: true,\r\n        GameCode: \"\",\r\n        LegitCode: false\r\n    },\r\n    reducers: {\r\n        setUpdate: (state, action) =>{\r\n            state.Trigger = action.payload;\r\n        },\r\n        setGameData: (state, action) => {\r\n            state.TopScore = action.payload.TopScore;\r\n            state.LeftScore = action.payload.LeftScore;\r\n            state.Top = action.payload.Top;\r\n            state.Left = action.payload.Left;\r\n            state.TopPic = action.payload.TopPic;\r\n            state.LeftPic = action.payload.LeftPic;\r\n            state.TopScore = action.payload.TopScore;\r\n            state.LeftScore = action.payload.LeftScore;\r\n            state.TopNumberOrder = action.payload.TopNumberOrder.slice();\r\n            state.LeftNumberOrder = action.payload.LeftNumberOrder.slice();\r\n            state.PeopleOnBoard = action.payload.PeopleOnBoard.slice();\r\n            state.TopScoreIndex = state.TopNumberOrder.indexOf(state.TopScore % 10);\r\n            state.LeftScoreIndex = state.LeftNumberOrder.indexOf(state.LeftScore % 10);\r\n            state.PlayerIndex = ((state.LeftScoreIndex * 10) + state.TopScoreIndex);\r\n            state.LegitCode = action.payload.LegitCode;\r\n\r\n        },\r\n        setGameCode:(state, action) =>{\r\n            state.GameCode = action.payload;\r\n        },\r\n        resetState:(state)=>{\r\n            state.Top= \"\"\r\n            state.Left= \"\"\r\n            state.TopPic= \"\"\r\n            state.LeftPic= \"\"\r\n            state.TopScore= 0\r\n            state.LeftScore= 0\r\n            state.TopNumberOrder= []\r\n            state.LeftNumberOrder= []\r\n            state.PeopleOnBoard= []\r\n            state.TopScoreIndex= 0\r\n            state.LeftScoreIndex= 0\r\n            state.PlayerIndex= 0\r\n            state.Trigger= true \r\n            state.GameCode= \"\"\r\n            state.LegitCode=false\r\n        }\r\n\r\n    },\r\n})\r\n\r\nexport const TopName = state => state.counter.Top\r\nexport const LeftName = state => state.counter.Left\r\nexport const TopPic = state => state.counter.TopPic\r\nexport const LeftPic = state => state.counter.LeftPic\r\nexport const TopScore = state => state.counter.TopScore\r\nexport const LeftScore = state => state.counter.LeftScore\r\nexport const TopNumberOrder = state => state.counter.TopNumberOrder\r\nexport const LeftNumberOrder = state => state.counter.LeftNumberOrder\r\nexport const PeopleOnBoard = state => state.counter.PeopleOnBoard\r\nexport const TopScoreIndex = state => state.counter.TopScoreIndex\r\nexport const LeftScoreIndex = state => state.counter.LeftScoreIndex\r\nexport const PlayerIndex = state => state.counter.PlayerIndex\r\nexport const Trigger = state => state.counter.Trigger\r\nexport const GameCode = state => state.counter.GameCode\r\nexport const LegitCode = state => state.counter.LegitCode\r\nexport const { setGameData, setUpdate, setGameCode, resetState} = counterSlice.actions\r\nexport default counterSlice.reducer","import {configureStore} from '@reduxjs/toolkit'\r\nimport counterSlice from './counterSlice'\r\n\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        counter: counterSlice\r\n    }\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { TopNumberOrder, TopPic, TopScore, TopScoreIndex, Trigger } from '../counterSlice';\r\n\r\n\r\n\r\nexport default function TopNumbers() {\r\n    const [topNumber, setTopNumbers] = useState([]);\r\n    const Xcord = useSelector(TopScoreIndex);\r\n    const topNumbers = useSelector(TopNumberOrder);\r\n    const trigger = useSelector(Trigger)\r\n    const rightPicture = useSelector(TopPic);\r\n    const topScore = useSelector(TopScore);\r\n    useEffect(() => {\r\n        setArray();\r\n    }, [trigger])\r\n    let setArray = () => {\r\n\r\n        setTopNumbers(topNumbers);\r\n\r\n\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Grid container columns={1}>\r\n                <Grid item xs={1}><img style={{paddingLeft: \"35%\"}} width={100} src={`${process.env.PUBLIC_URL}/${rightPicture}.png`}/> </Grid>\r\n                <Grid item xs={1}><h1 style={{paddingLeft: \"37%\"}}>{topScore}</h1></Grid>\r\n                <Grid item xs={1}>\r\n                    <Grid container columns={10}>\r\n                        {topNumber.map((element) => (\r\n                            <Grid item key={element} xs={1} >\r\n                                <Card\r\n                                    style={{                                        border: \".1em solid black\",\r\n                                    backgroundColor: topNumber[Xcord] === element ? 'Blue' : 'White' }}>\r\n                                    {element}\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card } from '@mui/material';\r\nimport { LeftNumberOrder, LeftPic, LeftScore, LeftScoreIndex, Trigger } from '../counterSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function Leftnumbers() {\r\n\r\n    /* eslint-disable */\r\n    const [leftNumber, setLeftNumbers] = useState([]);\r\n    const Ycord = useSelector(LeftScoreIndex);\r\n    const leftNumbers = useSelector(LeftNumberOrder);\r\n    const trigger = useSelector(Trigger)\r\n    const leftScore = useSelector(LeftScore);\r\n    const leftPicture = useSelector(LeftPic);\r\n\r\n    useEffect(() => {\r\n        setArray();\r\n\r\n    }, [trigger])\r\n    let setArray = () => {\r\n        setLeftNumbers(leftNumbers);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container columns={3}>\r\n            <Grid item xs={1}><img style={{paddingLeft: \"35%\"}} width={100} src={`${process.env.PUBLIC_URL}/${leftPicture}.png`}/> </Grid>\r\n                <Grid item xs={1}><h1 style={{ border: \"5px solid red\", paddingTop: \"37%\"}}>{leftScore}</h1></Grid>\r\n                <Grid item xs={1}>\r\n                    <Grid container columns={1}>\r\n                        {leftNumber.map((element) => (\r\n                            <Grid item key={element} xs={1} >\r\n                                <Card\r\n\r\n                                    style={{\r\n                                        border: \".1em solid black\",\r\n                                        backgroundColor: leftNumber[Ycord] === element ? 'Blue' : 'White' }} >\r\n                                    {element}\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Card } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\nimport { PlayerIndex, PeopleOnBoard, Trigger } from '../counterSlice';\r\n\r\n\r\nexport default function Setplayers() {\r\n    /* eslint-disable */\r\n    const [namesArray, setNamesArray] = useState([]);\r\n    const peopleOnBoard = useSelector(PeopleOnBoard);\r\n    const playerIndex = useSelector(PlayerIndex);\r\n    const trigger = useSelector(Trigger)\r\n    useEffect(() => {\r\n        setArray();\r\n    }, [trigger])\r\n    let setArray =  () => {\r\n\r\n         setNamesArray(peopleOnBoard) \r\n\r\n\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container columns={10}>\r\n                {namesArray.map((element) => (\r\n                    <Grid item key={element} xs={1} style={{ minWidth: \".5%\", minHeight: \".005%\" }}>\r\n                        <Card\r\n                            onClick={() => { console.log(playerIndex) }}\r\n                            style={{ backgroundColor: playerIndex === namesArray.indexOf(element) ? 'Blue' : 'White', minWidth: \".5%\", minHeight: \".00005%\" }}>\r\n                            {element}\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","// eslint-disable\nimport React, { useState, useEffect } from \"react\";\nimport react from \"react\";\nimport { Grid, Button } from '@mui/material';\nimport TopScorenumbers from '../Scorenumbers/TopScorenumbers'\nimport LeftScorenumber from '../Scorenumbers/LeftScoreNumbers'\nimport Playerboard from '../Playerboard/playerboard'\nimport { setGameData, setUpdate, resetState } from '../counterSlice'\nimport { useDispatch, connect } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport io from 'socket.io-client'\nimport '../GameInfoPage/GameInfoPage.css'\n\nconst socket = io('https://pure-beach-20004.herokuapp.com/');\n\nfunction GameInfoPage(props) {\n  let {game} = useParams();\n  socket.on('connect', () => {\n    console.log(\"Connected\")\n  })\n  socket.off().on('GotData', (data)=>{\n\n    if(data != null){\n    var jsonObj = JSON.parse(data.GameData);\n      jsonObj[\"LegitCode\"] = true;\n      \n        dispatch(setGameData(jsonObj));\n        dispatch(setUpdate(!props.trigger))\n        \n    }\n    else{\n      dispatch(resetState());\n    }\n\n  })\n  const dispatch = useDispatch();\n  const [reRen, setReRen] = useState(true);\n\n  useEffect(() => {\n\n    getGameInfo();\n\n  }, [reRen])\n\n  var getGameInfo = () => {\n    socket.emit('getData', game);\n    //setReRen(!reRen);\n  }\n  function BoardData(){\n    return (\n      <react.Fragment>\n        <p>The game code you're looking for {game}</p>\n        <Grid style={{border: \"10px solid black\", marginRight: \"40%\"}} container className=\"Yello\">\n          <Grid className=\"cell\" item xs={2}></Grid>\n          <Grid className=\"cell\" item xs={10}><TopScorenumbers /> </Grid>\n          <Grid className=\"cell\" item xs={2}><LeftScorenumber /></Grid>\n          <Grid className=\"cell\" item xs={10}><Playerboard /></Grid>\n        </Grid>\n        <p style={{paddingLeft: \"50%\"}}>Current Winner: {props.all.PeopleOnBoard[props.all.PlayerIndex]}</p>\n        <Button onClick={() => { setReRen(!reRen) }}>Admin Login</Button>\n\n  \n        \n  \n      </react.Fragment>\n    );\n  }\n  return (\n    <react.Fragment>\n      <BoardData/>\n      \n    </react.Fragment>\n\n  );\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    trigger: state.counter.Trigger,\n    all: state.counter,\n  }\n}\n\nexport default connect(mapStateToProps)(GameInfoPage);\n","// eslint-disable\r\nimport React, { useState } from \"react\";\r\nimport {TextField, Button} from '@mui/material'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nfunction GameLogin(props) {\r\n  let [gameCode, setGameCode] = useState('');\r\n\r\n\r\n  return (\r\n    <React.Fragment >\r\n      <div style={{paddingLeft: \"1%\"}}>\r\n        <p>Game code</p>\r\n        <TextField\r\n        size=\"small\"\r\n          required\r\n          id=\"outlined-required\"\r\n          label=\"Required\"\r\n          onChange={(e) => setGameCode(e.target.value)}\r\n        />\r\n        <Link to={`/game/${gameCode}`}>\r\n          <Button size=\"large\" variant=\"contained\">Find Game</Button>\r\n        </Link>\r\n        \r\n        \r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    all: state.counter,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GameLogin);\r\n","import * as React from \"react\";\nimport { Routes, Route, Outlet, Link, useParams } from \"react-router-dom\";\nimport GameInfoPage from \"./GameInfoPage/GameInfoPage\";\nimport GameLogin from \"./GameLogin/GameLogin\";\n\nexport default function App() {\n\n\n\n\n  return (\n    <div>\n      <GameLogin></GameLogin>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<GameLogin />} />\n          \n          <Route path=\"/blog/:slug\" element = {<BlogPost/>}/>\n          <Route path=\"/game/:game\" element = {<GameInfoPage/>}/>\n          <Route path=\"*\" element={<NoMatch />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\n\nfunction BlogPost() {\n  let { slug } = useParams();\n  return <div>Now showing post {slug}</div>;\n}\n\nfunction Layout() {\n  return (\n    <div>\n\n\n      <hr />\n\n      {/* An <Outlet> renders whatever child route is currently active,\n          so you can think about this <Outlet> as a placeholder for\n          the child routes we defined above. */}\n      <Outlet />\n    </div>\n  );\n}\n\nfunction NoMatch() {\n  return (\n    <div>\n      <h2>Nothing to see here!</h2>\n      <p>\n        <Link to=\"/\">Go to the home page</Link>\n      </p>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store'\nimport { Provider } from 'react-redux';\nimport { CookiesProvider } from 'react-cookie'\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}